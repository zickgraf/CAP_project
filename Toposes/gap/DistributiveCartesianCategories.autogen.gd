# SPDX-License-Identifier: GPL-2.0-or-later
# Toposes: Elementary toposes
#
# Declarations
#
# THIS FILE IS AUTOMATICALLY GENERATED, SEE CAP_project/CAP/gap/MethodRecord.gi

#! @Chapter Cartesian Categories

#! @Section Add-methods

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `LeftCartesianDistributivityExpanding`.
#! $F: ( a, L ) \mapsto \mathtt{LeftCartesianDistributivityExpanding}(a, L)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddLeftCartesianDistributivityExpanding",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddLeftCartesianDistributivityExpanding",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityExpanding",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityExpanding",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `LeftCartesianDistributivityExpandingWithGivenObjects`.
#! $F: ( s, a, L, r ) \mapsto \mathtt{LeftCartesianDistributivityExpandingWithGivenObjects}(s, a, L, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddLeftCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddLeftCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `LeftCartesianDistributivityFactoring`.
#! $F: ( a, L ) \mapsto \mathtt{LeftCartesianDistributivityFactoring}(a, L)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddLeftCartesianDistributivityFactoring",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoring",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoring",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoring",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `LeftCartesianDistributivityFactoringWithGivenObjects`.
#! $F: ( s, a, L, r ) \mapsto \mathtt{LeftCartesianDistributivityFactoringWithGivenObjects}(s, a, L, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddLeftCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddLeftCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `RightCartesianDistributivityExpanding`.
#! $F: ( L, a ) \mapsto \mathtt{RightCartesianDistributivityExpanding}(L, a)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddRightCartesianDistributivityExpanding",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddRightCartesianDistributivityExpanding",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityExpanding",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityExpanding",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `RightCartesianDistributivityExpandingWithGivenObjects`.
#! $F: ( s, L, a, r ) \mapsto \mathtt{RightCartesianDistributivityExpandingWithGivenObjects}(s, L, a, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddRightCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddRightCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityExpandingWithGivenObjects",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `RightCartesianDistributivityFactoring`.
#! $F: ( L, a ) \mapsto \mathtt{RightCartesianDistributivityFactoring}(L, a)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddRightCartesianDistributivityFactoring",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddRightCartesianDistributivityFactoring",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityFactoring",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityFactoring",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `RightCartesianDistributivityFactoringWithGivenObjects`.
#! $F: ( s, L, a, r ) \mapsto \mathtt{RightCartesianDistributivityFactoringWithGivenObjects}(s, L, a, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddRightCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddRightCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddRightCartesianDistributivityFactoringWithGivenObjects",
                  [ IsCapCategory, IsList ] );
