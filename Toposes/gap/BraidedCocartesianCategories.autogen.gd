# SPDX-License-Identifier: GPL-2.0-or-later
# Toposes: Elementary toposes
#
# Declarations
#
# THIS FILE IS AUTOMATICALLY GENERATED, SEE CAP_project/CAP/gap/MethodRecord.gi

#! @Chapter Cocartesian Categories

#! @Section Add-methods

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianBraiding`.
#! $F: ( a, b ) \mapsto \mathtt{CocartesianBraiding}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianBraiding",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianBraiding",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianBraiding",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianBraiding",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianBraidingInverse`.
#! $F: ( a, b ) \mapsto \mathtt{CocartesianBraidingInverse}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianBraidingInverse",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianBraidingInverse",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianBraidingInverse",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianBraidingInverse",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianBraidingInverseWithGivenCoproducts`.
#! $F: ( s, a, b, r ) \mapsto \mathtt{CocartesianBraidingInverseWithGivenCoproducts}(s, a, b, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianBraidingInverseWithGivenCoproducts",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianBraidingInverseWithGivenCoproducts",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianBraidingInverseWithGivenCoproducts",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianBraidingInverseWithGivenCoproducts",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianBraidingWithGivenCoproducts`.
#! $F: ( s, a, b, r ) \mapsto \mathtt{CocartesianBraidingWithGivenCoproducts}(s, a, b, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianBraidingWithGivenCoproducts",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianBraidingWithGivenCoproducts",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianBraidingWithGivenCoproducts",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianBraidingWithGivenCoproducts",
                  [ IsCapCategory, IsList ] );
